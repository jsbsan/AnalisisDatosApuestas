' Gambas class file

Public listaCuenta As New ClaseCuenta[]
Public ListaId As New ClaseGestorIdBeneficio

Public GlobalEnJuego As Float
Public GlobalTotal As Float
Public GlogbalCajaPayPalBene As Float

Public ContenidoFichero As String

Public ImporteApostado As Float
Public ImporteCaja As Float

Public GlobalBeneficio As Float

Public Sub Form_Open()

    Me.Title = "Analisis de Datos. Version " & Application.Version

End

Public Sub Form_Close()

    settings.write(Me)

End

Public Sub Form_Show()

    settings.read(Me)

    'hago click en click analizar

    ButtonAnalizar_Click()
    'y luego en ordenar por fecha
    ' ButtonPorFecha_Click() -> LO DESACTIVO Porque ButtonAnalizar, ya lo hace.

End

Public Sub ButtonAnalizar_Click()
    '' id fichero	fecha	Cuenta	Saldo	comentario	fuente	VARIOS

    Dim contenido As String[]
    Dim l As String
    Dim dato As String[]
    Dim nombrecsv As String = User.home & "/informacion.csv" ''indicar nombre del fichro que contiene los datos
    Dim valor As Float
    Dim total As Float
    'crea lista de cuentas de suma...
    Dim tmpCuenta As ClaseCuenta

    'borrado de datos anteriore...
    listaCuenta = New ClaseCuenta[]

    ListaId = New ClaseGestorIdBeneficio

    If Not Exist(nombrecsv) Then
        Message.Error("No existe fichero de datos")
        Quit
    Endif

    'crea las cuentas partiendo del fichero de datos CuentasM.txt
    contenido = Split(File.Load("CuentasM.txt"), "\n")
    For Each l In contenido
        tmpcuenta = New ClaseCuenta
        tmpcuenta.nombre = l
        tmpcuenta.suma = 0
        listaCuenta.Add(tmpCuenta)
        tmpCuenta = Null
    Next

    'leer fichero de datos...

    ContenidoFichero = File.Load(nombrecsv)

    contenido = Split(Upper(ContenidoFichero), "\n")
    contenido.Delete(0) ' la primera fila contiene los nombre de los campos

    'borrado de datos que esten en los textAreas
    TextAreaLugares.text = ""
    TextAreaResumen.text = "Lugar" & "\t" & "Importe" & "\t" & "Porcentaje" & "\n"

    For Each l In contenido

        dato = Split(l, gb.Tab)

        'el dato de la cuenta esta en 2 columna y saldo en la 3
        Try valor = Val(Replace(Replace(dato[3], ".", ","), " €", ""))
        If Error Then

        Else
            '-------------------------------------------------
            'tabla de datos Cuenta / Saldo
            '-------------------------------------------------
            sumasi(dato[2], valor) 'cuenta y saldo

            '-------------------------------------------------
            'tabla de datos ID / Zzbeneficio
            '-------------------------------------------------
            If dato[2] = "ZZ BENEFICIO" Then
                ListaId.agrega(dato[0], VALOR, dato[1])
            Endif

            '-------------------------------------------------
            'tabla de datos ID / Zzbeneficio /enjuego
            '-------------------------------------------------
            If comun.contiene(dato[2], "ZEN ") Then
                ListaId.agregaInversion(dato[0], VALOR)
            Endif

        Endif

    Next
    ' ya he acabado de contar las cuentas y sus sumas
    ' Print "------------------------------------"
    ' Print "--        Sumas de cuentas         -"
    ' Print "------------------------------------"
    TextAreaLugares.text &= "Lugar" & "\t" & "Importe" & "\n"
    For Each tmpcuenta In ListaCuenta
        'Print tmpCuenta.nombre, Format(Round(tmpcuenta.suma, -2), "#.##")
        If Round(tmpcuenta.suma, -2) <> 0 Then

            total += Round(tmpcuenta.suma, -2)
            TextAreaLugares.text &= tmpCuenta.nombre & gb.tab & cambiaCeros(Format(Round(tmpcuenta.suma, -2), "0####.#0")) & "\n"
        Endif
    Next

    TextAreaLugares.text &= "____________________________\n"
    TextAreaLugares.text &= "Total:" & Format(Round(total, -2), "0###.#0")

    'Calculo de sumas de Banco / Casa Apuestas / En Juego  / Zz Beneficio
    Dim enbanco As Float
    Dim enPAYPAL As Float
    Dim enzen As Float
    Dim enBeneficioEsperado As Float
    Dim enCasas As Float
    For Each tmpcuenta In ListaCuenta

        If comun.contiene(tmpCuenta.nombre, "PAYPAL") Then
            enPAYPAL += Round(tmpCuenta.suma, -2)
            Continue
        Endif

        If comun.contiene(tmpCuenta.nombre, "0 ") Then
            enbanco += Round(tmpCuenta.suma, -2)
            Continue
        Endif

        If comun.contiene(tmpCuenta.nombre, "ZEN ") Then
            enZEN += Round(tmpCuenta.suma, -2)
            Continue
        Endif
        If comun.contiene(tmpCuenta.nombre, "ZZ ") Then
            enBeneficioEsperado += Round(tmpCuenta.suma, -2)
            Continue
        Endif
        enCasas += Round(tmpCuenta.suma, -2)

    Next
    '--------------------------------------
    'Tabla 2:resultados...
    '--------------------------------------
    Dim TotalesRecalculo As Float = Round(enbanco + enPAYPAL + enZEn + enBeneficioEsperado + enCasas, -2)

    TextAreaResumen.text &= "En Banco:         " & gb.tab & cambiaCeros(Format(Round(enbanco, -2), "0####.#0")) & gb.tab & Porcentaje(enbanco, TotalesRecalculo) & "\n"

    TextAreaResumen.text &= "En Paypal:        " & gb.tab & cambiaCeros(Format(Round(enPAYPAL, -2), "0####.#0")) & gb.tab & Porcentaje(enPAYPAL, TotalesRecalculo) & "\n"

    TextAreaResumen.text &= "En Casas:         " & gb.tab & cambiaCeros(Format(Round(enCasas, -2), "0####.#0")) & gb.tab & Porcentaje(enCasas, TotalesRecalculo) & "\n"

    TextAreaResumen.text &= "En Juego:         " & gb.tab & cambiaCeros(Format(Round(enZEn, -2), "0####.#0")) & gb.tab & Porcentaje(enZEN, TotalesRecalculo) & "\n"
    TextAreaResumen.text &= "En Beneficio Esp.:" & gb.tab & cambiaCeros(Format(Round(enBeneficioEsperado, -2), "0####.#0")) & gb.tab & Porcentaje(enBeneficioEsperado, TotalesRecalculo) & "\n"
    TextAreaResumen.text &= "__________________" & "\n"
    TextAreaResumen.text &= "Total: " & gb.tab & Str$(Round(totalesRecalculo, -2))

    ProgressBarEnJuego.value = enzen / totalesRecalculo

    ProgressBarBenef.value = enBeneficioEsperado / totalesRecalculo

    ProgressBarCasas.value = enCasas / totalesRecalculo

    ProgressBarPaypal.value = enPAYPAL / totalesRecalculo

    ProgressBarBanco.value = enbanco / totalesRecalculo

    GlobalEnJuego = Round(enzen, -2)
    GlobalTotal = Round(totalesRecalculo, -2)
    GlogbalCajaPayPalBene = GlobalTotal - GlobalEnJuego

    ImporteApostado = enZen + enBeneficioEsperado
    ImporteCaja = enCasas + enbanco + enPAYPAL

    GlobalBeneficio = enBeneficioEsperado
    '--------------------------------------
    ' TABLA DE DATOS DE ID -> mejor por fecha
    '--------------------------------------
    ButtonPorFecha_Click()
    'TextAreaEnJuego.TEXT = ListaId.listar()

    'rellenar gridview
    rellenaGridview()

    'avance Agenda
    RellenarAvanceAgenda()
    'graficar agenda
    ButtonGraficaJS_Click()

    comun.ColorCeldaNumeroNegativo(GridViewLugares, 1)

    comun.ColorCeldaNumeroNegativo(GridViewEnJuego, 1)

    comun.ColorCeldaNumeroNegativo(GridViewResumen, 1)

End

Public Sub Porcentaje(valor As Float, total As Float) As String

    Return Str$(Round(valor * 100 / total, -2)) & " %"

End

Public Sub sumasi(textocuenta As String, valor As Float)

    Dim t As ClaseCuenta

    For Each t In listaCuenta

        If t.nombre = textocuenta Then
            t.suma += valor
            ' If t.nombre = "WILLIAMHILL" Then
            '     Print "WILLIAMHILL", T.SUMA
            ' Endif
        Endif
    Next

End

Public Function cambiaCeros(dato As String) As String

    If Mid$(dato, 1, 3) = "000" Then Return "   " & Mid$(dato, 4, 10)
    If Mid$(dato, 1, 2) = "00" Then Return "  " & Mid$(dato, 3, 10)
    If Mid$(dato, 1, 1) = "0" Then Return " " & Mid$(dato, 2, 10)

    If Mid$(dato, 1, 4) = "-000" Then Return "  -" & Mid$(dato, 5, 10)
    If Mid$(dato, 1, 3) = "-00" Then Return " -" & Mid$(dato, 4, 10)
    If Mid$(dato, 1, 2) = "-0" Then Return "-" & Mid$(dato, 3, 10)

End

Public Sub ButtonEditorPluma_Click()

    Exec ["pluma", User.home & "/informacion.csv"]

End

Public Sub ButtonPorFecha_Click()

    TextAreaEnJuego.text = ListaId.listarOrdenFecha(GlobalEnJuego + GlobalBeneficio, GlogbalCajaPayPalBene - GlobalBeneficio, GlobalTotal)
    ButtonGraficar_Click()

End

Public Sub ButtonNormalListadoApuestanPendientes_Click()

    '--------------------------------------
    ' TABLA DE DATOS DE ID
    '--------------------------------------
    TextAreaEnJuego.TEXT = ListaId.listar()

End

Public Sub ButtonPorId_Click()

    '--------------------------------------
    ' TABLA DE DATOS DE ID
    '--------------------------------------
    TextAreaEnJuego.TEXT = ListaId.listarOrdenID()

End

Public Sub ButtonFiltrar_Click()

    Dim mf As New FormFiltro
    Dim tmplista As New String[]

    If ContenidoFichero <> "" Then
        tmplista.Add(Upper(ContenidoFichero))
        mf.listado = tmplista
        mf.Show()
    Else
        Message.Info("no hay cargada información")
    Endif

End

Public Sub ButtonCopiaResumen_Click()

    Clipboard.Copy(TextAreaLugares.Text)

End

Public Sub ButtonCopiaResumenCompactado_Click()

    Clipboard.Copy(TextAreaResumen.Text)

End

Public Sub ButtonApuestasEnJuego_Click()

    Clipboard.Copy(TextAreaEnJuego.Text)

End

''TODO: BARRAS DE PROGRESO http://ploticus.sourceforge.net/gallery/propbars1.htm

Public Sub ButtonGraficar_Click()

    Dim p As Pie
    Dim a As Integer
    Dim tmpAreaDrawing As DrawingArea

    Dim child As Control
    Dim fechaanterior As String = ""
    Dim contador As Integer = 0

    For Each child In HPanelGrafica.Children
        Child.Delete()
    Next

    For a = 0 To ListaId.listagrafica.count - 1
        '-----------------------------
        'añadir grafico
        '-----------------------------
        tmpAreaDrawing = New DrawingArea(HPanelGrafica) As "grupoGrafico"

        tmpAreaDrawing.w = 50
        tmpAreaDrawing.h = 50
        tmpAreaDrawing.Tooltip = ListaId.listagrafica[a].texto
        p = New Pie(tmpAreaDrawing, ListaId.listagrafica[a].enjuego, ListaId.listagrafica[a].caja, 0)
        If ListaId.listagrafica[a].fecha = fechaanterior Then
            p.colorfondo = contador
        Else
            contador += 1
            p.colorfondo = contador
            fechaanterior = ListaId.listagrafica[a].fecha

        Endif

        tmpAreaDrawing.tag = p
    Next

End

Public Sub grupoGrafico_Draw()

    Last.tag.dibujar()

End

Public Sub rellenaGridview()

    comun.DefinirGrid(GridViewEnJuego, TextAreaEnJuego.text, True)
    'anchos
    GridViewEnJuego.Columns[0].width = 150 'nombre del id de apuesta
    GridViewEnJuego.Columns[3].width = 75 'fecha

    comun.DefinirGrid(GridViewLugares, TextAreaLugares.text)
    GridViewLugares.Columns[0].width = 150 'nombre del id de apuesta

    comun.DefinirGrid(GridViewResumen, TextAreaResumen.text, 3)
    GridViewResumen.Columns[0].width = 150 'nombre del id de apuesta

End

Public Sub RellenarAvanceAgenda()

    Dim hoy As String
    Dim a As Integer
    Dim fecha, FechaConjuntoApuestas As Date

    TextAreaAgenda.text = "Dia" & "\t" & "Apostado/Ben Esp." & "\t" & "En Casas/Banco" & "\n"
    'partimos del dato de hoy (desde resumen)
    ' TextAreaAgenda.text &= "Actual" & "\t" & ImporteApostado & "\t" & ImporteCaja & "\n"

    'proceso 1 semana (siete dias, a partir de hoy)
    hoy = Format(Now, "dd/mm/yyyy")

    FechaConjuntoApuestas = maximafecha(GridViewEnJuego)

    Dim resultado As String[]
    For a = 0 To 15 'miro 30 dias

        fecha = Date(Year(Now), Month(Now), Day(Now)) + a

        If DateDiff(FechaConjuntoApuestas, fecha, gb.day) - 1 > 0 Then
            'salir del bucle
            Break
        Endif

        resultado = compruebaGridApuesta(fecha)

        If resultado[0] = Null Then
            fecha = Date(Year(Now), Month(Now), Day(Now)) + a
            TextAreaAgenda.text &= Format(fecha, "dd/mm/yyyy") & "\t" & ImporteApostado & "\t" & ImporteCaja & "\n"
        Else
            fecha = Date(Year(Now), Month(Now), Day(Now)) + a
            TextAreaAgenda.text &= Format(fecha, "dd/mm/yyyy") & "\t" & ImporteApostado & "\t" & ImporteCaja & "\n"
            ImporteApostado = Val(resultado[1])
            ImporteCaja = Val(resultado[2])

        Endif

    Next

    comun.DefinirGrid(GridViewAgenda, Replace(TextAreaAgenda.text, ".", ","), False)
    GridViewAgenda.Columns[0].width = 100 'nombre del id de apuesta

End

Public Function maximafecha(GridViewEnJuego As GridView) As Date

    Dim a As Integer
    Dim ndia, nmes, nano As Integer

    For a = 0 To GridViewEnJuego.Rows.count - 5

        If InStr(GridViewEnJuego[a, 3].Text, "/") <> 0 Then
            ndia = Val(Mid(GridViewEnJuego[a, 3].Text, 1, 2))
            nmes = Val(Mid(GridViewEnJuego[a, 3].Text, 4, 2))
            nano = Val(Mid(GridViewEnJuego[a, 3].Text, 7, 4))
        Endif
    Next

    Return Date(nano, nmes, ndia)

End

Public Function compruebaGridApuesta(fecha As Date) As String[]

    Dim datos As New String[]
    Dim a As Integer
    Dim importeA, importeC As String
    Dim ndia As Integer
    Dim nmes As Integer
    Dim nano As Integer

    Dim datoFechaColumna As Date

    datos.Add(Null) 'primer dato 0
    datos.Add(Null) 'primer dato 1
    datos.Add(Null) 'primer dato 2
    datos[1] = "100000"
    datos[2] = "0"
    For a = 0 To GridViewEnJuego.Rows.count - 5

        ndia = Val(Mid(GridViewEnJuego[a, 3].Text, 1, 2))
        nmes = Val(Mid(GridViewEnJuego[a, 3].Text, 4, 2))
        nano = Val(Mid(GridViewEnJuego[a, 3].Text, 7, 4))

        datoFechaColumna = Date(nano, nmes, ndia)
        importeA = GridViewEnJuego[a, 4].Text
        importeC = GridViewEnJuego[a, 5].Text
        If DateDiff(datoFechaColumna, fecha, gb.day) = 0 Then
            datos[0] = True
            If Val(importeA) < Val(datos[1]) Then datos[1] = importeA
            If Val(importeC) > Val(datos[2]) Then datos[2] = importeC
        Endif
        If DateDiff(datoFechaColumna, fecha, gb.day) < 0 Then Break
    Next

    Return datos

End

Public Sub ButtonGraficaJS_Click()

    GraficaJavaScript.graficarDatos(WebView1, GridViewAgenda)

End

Public Sub GridViewEnJuego_DblClick()

    Dim fila As Integer
    Dim tmplista As New String[]
    Dim FormFiltroTmp As New FormFiltro

    fila = GridViewEnJuego.Rows.Selection[0]

    If ContenidoFichero <> "" Then
        tmplista.Add(Upper(ContenidoFichero))
        FormFiltroTmp.listado = tmplista
        FormFiltroTmp.FiltroDado(GridViewEnJuego[fila, 0].text)
        FormFiltroTmp.Show()
    Else
        Message.Info("no hay cargada información")
    Endif

End

Public Sub ButtonComparaLista_Click()

    Dim lista As String[]
    Dim l As String
    Dim a, b As Integer = -1
    Dim listaExistente As String[]

    Dim listalimpia As New String[]

    lista = Split(Clipboard.Paste("text/plain"), "\n")

    For a = 0 To lista.count - 1

        l = lista[a]
        If l = "" Or Len(l) = 2 Or Len(l) = 1 Then
            'no la añado
        Else
            listalimpia.Add(l)
        Endif
    Next

    listaExistente = ListaId.IdexistentesPendientes()

    Dim existe As Boolean
    Dim contenido As String

    For a = 0 To listaExistente.count - 1
        existe = False
        Dim nombreAcomparar As String = Upper$(Replace(Replace(Upper$(listaExistente[a]), " ", ""), "FREEBET", "FREE"))
        For b = 0 To listalimpia.Count - 1
            'lo pongo en mayusculas y quito espacios para normalizar los nombres antes de comparar
            If nombreAComparar = Upper(Replace(Replace(Upper$(listalimpia[b]), " ", ""), "FREEBET", "FREE")) Then

                existe = True

            Endif

        Next

        If existe = False Then
            contenido &= listaExistente[a] & "\n"
        Endif

    Next

    If Len(Replace(contenido, "\n", "")) = 0 Then
        Message.Info("La lista de ID que pasas en el portapapeles, esta incluida en la id pendientes")
    Else
        Message.Info("lista:\n" & contenido)
        Print "lista Id que no estan:\n" & contenido

    Endif

End
