' Gambas module file

Public Function contiene(texto As String, textoabuscar As String) As Boolean '' devuelve verdadero o falso si un texto contiene textoabuscar

    If String.InStr(texto, textoabuscar) <> 0 Then
        Return True
    Else
        Return False
    Endif

End

Public Function DefinirGridSinFormato(OrigenGrid As Gridview, contenido As String)

    Dim a, b As Integer
    Dim lineas As String[]
    Dim columnas As String[]

    '1ยบ fase: estudia contenido
    lineas = Split(contenido, "\n") 'separadas por salto de linea

    'la primera linea tiene los datos de nombre de columnas
    columnas = Split(lineas[0], "\t") 'separadas por tabulador

    'para borrar todo el contenido....
    OrigenGrid.Clear()

    'defino grid
    With OrigenGrid
        .header = 3
        .columns.count = columnas.Count
        .rows.count = lineas.count - 1 'le quito la primera linea

        For a = 0 To columnas.count - 1
            .columns[a].title = columnas[a]
        Next

        .Font.name = "Sans"
        .Font.size = 8
        .Mode = Select.Single
    End With

    'ahora meto los datos en las filas por cada columna

    For a = 1 To lineas.count - 1
        columnas = Split(lineas[a], "\t")
        For b = 0 To columnas.count - 1

            Try OrigenGrid[a - 1, b].text = columnas[b]

        Next

    Next

    Return

End

Public Function DefinirGrid(OrigenGrid As Gridview, contenido As String, Optional datosApuestas As Integer)

    Dim a, b As Integer
    Dim lineas As String[]
    Dim columnas As String[]

    '1ยบ fase: estudia contenido
    lineas = Split(contenido, "\n") 'separadas por salto de linea

    'la primera linea tiene los datos de nombre de columnas
    columnas = Split(lineas[0], "\t") 'separadas por tabulador

    'para borrar todo el contenido....
    OrigenGrid.Clear()

    'defino grid

    With OrigenGrid
        .header = 3
        .columns.count = columnas.Count
        .rows.count = lineas.count - 1 'le quito la primera linea

        For a = 0 To columnas.count - 1
            .columns[a].title = columnas[a]
        Next

        .Font.name = "Sans"
        .Font.size = 8
        .Mode = Select.Single
    End With

    'ahora meto los datos en las filas por cada columna

    For a = 1 To lineas.count - 1
        columnas = Split(lineas[a], "\t")
        For b = 0 To columnas.count - 1

            ' If datosApuestas = True Then
            If b > 0 And InStr(columnas[b], "/") = 0 Then
                Try OrigenGrid[a - 1, b].text = Format(Val(columnas[b]), "0.#0")
                Try OrigenGrid[a - 1, b].Alignment = Align.Right
            Else
                Try OrigenGrid[a - 1, b].text = columnas[b]
            Endif
            ' Else
            '
            '     Try OrigenGrid[a - 1, b].text = columnas[b]
            ' Endif
            If datosApuestas = 3 Then
                'caso en que son resumenen
                Try OrigenGrid[a - 1, b].text = columnas[b]

            Endif

        Next

    Next

    Return

End

Public Sub vaciarDirectorio(ruta As String, Optional patron As String) ''Borrar contenido de un directorio dado un patron de borrado
    'borrado si existe la ruta

    Dim file As String

    If patron = "" Then patron = "*"
    If Exist(ruta) Then
        For Each File In Dir(ruta & "/", patron)
            Try Kill ruta & "/" & file
        Next
    Endif
Catch
    Message.Error(("Error al intentar borrar el directorio: ") & ruta)

End

Public Sub ColorCeldaNumeroNegativo(g As GridView, c As Integer)

    Dim a As Integer

    'por defecto:

    For a = 0 To g.rows.Count - 1
        g[a, c].Foreground = Color.black
        If Not g[a, c].text = "" And If Val(g[a, c].text) < 0 Then
            g[a, c].Foreground = Color.Red
        Endif

    Next

End
